node{

    def dockerImageName = 'project-base-8-jdk-alpine'
    def dockerImageModule = 'api-mall'
    def dockerImageVersion = '1.0.0'
    def harborServer = 'harbor.34580.com'
    def harborUser = 'harboruser'
    def harborPwd = 'Sy123456'

    // ting yun
	def tingyunJarUrl = 'http://sy-suz-srv73.suiyi.com.cn:8081/repository/shihang-releases/com/tingyun/tingyun-agent-java/2.6.0/tingyun-agent-java-2.6.0.jar'
    def tingyunJarName = 'tingyun-agent-java.jar'

    // arthas-boot
    def arthasJarUrl = "https://alibaba.github.io/arthas/arthas-boot.jar"
    def arthasJarName = "arthas-boot.jar"

    // sky walking
    def skyWalkingAgentDir = "skywalking-agent"


    def dockerImageTag = harborServer + '/' + dockerImageModule + '/' + dockerImageName + ':' + dockerImageVersion
    def workspace = sh (
            script: 'cd ../${JOB_NAME}@script/project-base/project-base-docker/ && pwd',
            returnStdout: true
    ).trim()

    dir(workspace){

        stage('Docker build') {
            echo 'docker build'

            echo '************** remove old images  **************'
            sh "docker rmi \$(docker images --format '{{.Repository}}:{{.Tag}}' | grep '${dockerImageName}:${dockerImageVersion}')"

            echo 'download arthas-boot.jar'
            sh "curl ${arthasJarUrl} --output ci/${arthasJarName}"
            sh "cd ci && sed -i 's/@arthas_jar_file/${arthasJarName}/g' Dockerfile "

            echo 'download tingyun-agent-java.jar'
            sh "curl ${tingyunJarUrl} --output ci/${tingyunJarName}"
            sh "cd ci && sed -i 's/@tingyun_jar_file/${tingyunJarName}/g' Dockerfile "

            echo 'copy sky walking agent to ci dir'
            sh "cd ci && sed -i 's/@skywalking_agent_dir/${skyWalkingAgentDir}/g' Dockerfile "
            sh "cp -r ${skyWalkingAgentDir} ci"

            sh "cd ci && docker build -t ${dockerImageTag} ."
        }

        stage('Docker push') {
            echo 'Docker push'
            sh "docker login -u ${harborUser} -p ${harborPwd} ${harborServer}"
            sh "docker push ${dockerImageTag}"
            sh "docker logout ${harborServer}"
        }
    }

}