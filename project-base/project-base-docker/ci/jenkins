node{

    def dockerImageName = 'project-base-8-jdk-alpine'
    def dockerImageModule = 'api-mall'
    def dockerImageVersion = '1.0.0'
    def harborServer = 'harbor.34580.com'
    def harborUser = 'harboruser'
    def harborPwd = 'Sy123456'

    // ting yun
	def tingyunJarUrl = 'http://sy-suz-srv73.suiyi.com.cn:8081/repository/shihang-releases/com/tingyun/tingyun-agent-java/2.6.0/tingyun-agent-java-2.6.0.jar'
    def tingyunJarName = 'tingyun-agent-java.jar'

    // arthas
    def arthasDir = "arthas"

    // sky walking
    def skyWalkingAgentDir = "skywalking-agent"



    def dockerImageTag = harborServer + '/' + dockerImageModule + '/' + dockerImageName + ':' + dockerImageVersion
    def workspace = sh (
            script: 'cd ../${JOB_NAME}@script/project-base/project-base-docker/ && pwd',
            returnStdout: true
    ).trim()

    def dockerImageResourceDir = workspace + "/image-resource"

    dir(workspace){

        stage('Prepare Docker') {
            echo 'prepare Docker'

            sh "rm -rf ${dockerImageResourceDir} && mkdir ${dockerImageResourceDir}"

            try {
                echo '************** remove old images  **************'
                sh "docker rmi \$(docker images --format '{{.Repository}}:{{.Tag}}' | grep '${dockerImageName}:${dockerImageVersion}')"
            }
            catch (exc) {

            }

            echo 'copy docker file'
            sh "cp ci/Dockerfile ${dockerImageResourceDir}"

            echo 'download tingyun-agent-java.jar'
            sh "curl ${tingyunJarUrl} --output ${dockerImageResourceDir}/${tingyunJarName}"

            echo 'copy sky walking agent'
            sh "cp -r ${skyWalkingAgentDir} ${dockerImageResourceDir}"

            echo 'copy arthas'
            sh "cp -r ${arthasDir} ${dockerImageResourceDir}"

        }

        dir(dockerImageResourceDir) {
            stage('Docker build') {
                echo '--------- docker image resource begin --------------'
                sh 'ls -l'
                echo '--------- docker image resource end   --------------'

                sh "sed -i 's/@arthas_dir/${arthasDir}/g' Dockerfile "
                sh "sed -i 's/@tingyun_jar_file/${tingyunJarName}/g' Dockerfile "
                sh "sed -i 's/@skywalking_agent_dir/${skyWalkingAgentDir}/g' Dockerfile "

                sh 'cat Dockerfile'

                sh "docker build --no-cache -t ${dockerImageTag} ."

            }
            stage('Docker push'){
                echo 'Docker push'
                sh "docker login -u ${harborUser} -p ${harborPwd} ${harborServer}"
                sh "docker push ${dockerImageTag}"
                sh "docker logout ${harborServer}"
            }
        }
    }

}